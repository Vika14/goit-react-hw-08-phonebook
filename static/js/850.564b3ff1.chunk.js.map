{"version":3,"file":"static/js/850.564b3ff1.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-07-phonebook/./src/components/ContactForm/contactForm.module.css?2173","redux/selectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-07-phonebook/./src/components/Contacts/contacts.module.css?1e09","components/Contacts/Contacts.jsx","webpack://goit-react-hw-07-phonebook/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"forma\":\"contactForm_forma__IRx3i\",\"nameNumber\":\"contactForm_nameNumber__oYH6B\",\"pole\":\"contactForm_pole__2QAND\",\"btn\":\"contactForm_btn__qtr3a\"};","export const selectContacts = state => state.contacts.items;\nexport const selectStatusFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectUser = state => state.auth.user;\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\nexport const selectIsFetching = state => state.auth.isFetching;\n","import { useState } from 'react';\n// import { nanoid } from 'nanoid';\nimport css from './contactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [contactName, setcontactName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.some(({ name }) => name === contactName)) {\n      window.alert(`${contactName} is already in your contacts`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name: contactName,\n        number,\n        // id: nanoid(),\n      })\n    );\n\n    setcontactName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case 'name':\n        setcontactName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.forma}>\n      <label className={css.nameNumber}>\n        Name\n        <input\n          className={css.pole}\n          type=\"text\"\n          name=\"name\"\n          value={contactName}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label className={css.nameNumber}>\n        Number\n        <input\n          className={css.pole}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btnList\":\"contacts_btnList__QoV0D\",\"contactList\":\"contacts_contactList__sCV5i\",\"cont\":\"contacts_cont__Xxueh\",\"contactListItem\":\"contacts_contactListItem__21VGD\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts, selectStatusFilter } from 'redux/selectors';\n\nimport css from './contacts.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filtered = useSelector(selectStatusFilter);\n\n  const normalizedFilter = filtered.toLowerCase();\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <div className={css.contactListItem}>\n      <ul className={css.contactList}>\n        {filteredContacts.map(({ id, name, number }) => (\n          <li key={id} className={css.cont}>\n            {name}: {number}\n            <button\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n              className={css.btnList}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"forma\":\"filter_forma__LKSZB\",\"nameNumber\":\"filter_nameNumber__ZCEqz\",\"pole\":\"filter_pole__MVY+F\"};","import { useDispatch, useSelector } from 'react-redux';\n\nimport css from './filter.module.css';\n\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectStatusFilter } from 'redux/selectors';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div className={css.forma}>\n      <label className={css.nameNumber}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name={filter}\n          value={filter}\n          onChange={onChange}\n          placeholder=\"Please write name\"\n          className={css.pole}\n        />\n      </label>\n    </div>\n  );\n}\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'start',\n      }}\n    >\n      <ContactForm />\n      <Filter />\n      <title>Contacts</title>\n      {isLoading && !error && (\n        <b\n          style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            marginTop: '10px',\n          }}\n        >\n          Loading...\n        </b>\n      )}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectStatusFilter","filter","selectIsLoading","isLoading","selectError","error","ContactForm","useSelector","dispatch","useDispatch","useState","contactName","setcontactName","number","setNumber","handleChange","e","target","value","name","onSubmit","preventDefault","some","window","alert","addContact","className","css","type","onChange","pattern","title","required","ContactList","normalizedFilter","toLowerCase","filteredContacts","includes","map","id","onClick","deleteContact","Filter","setFilter","placeholder","Contacts","useEffect","fetchContacts","style","display","flexDirection","alignItems","marginLeft","marginRight","marginTop"],"sourceRoot":""}